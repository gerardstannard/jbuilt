# Properties file which configures the operation of the JDK
# logging facility.

# The system will look for this config file, first using
# a System property specified at startup:
#
# >java -Djava.util.logging.config.file=C:\workspace\ExpoIsf\web\WEB-INF\logging-dev.properties
#
#-Djava.util.logging.config.file=L:galileo\workspace\jbuiltTest\web\WEB-INF\logging-dev.properties
#
# If this property is not specified, then the config file is
# retrieved from its default location at:
#
# JDK_HOME/jre/lib/logging.properties

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers=java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level=ALL

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.
#javax.enterprise.resource.webcontainer.jsf.level=INFO
javax.enterprise.resource.webcontainer.jsf.level=FINE
#javax.faces.level=INFO
javax.faces.level=FINE
javax.management=INFO
#com.sun.xml.ws.api.pipe=FINE


javax.faces.lifecycle.level=FINE
javax.faces.component.level=FINE




org.jbuilt.componentTree.level=FINE
org.jbuiltDemo.view.level=FINE





# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
